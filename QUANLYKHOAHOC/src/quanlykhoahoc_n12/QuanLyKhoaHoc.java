/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlykhoahoc_n12;

import quanlykhoahoc_n12.login.DangNhap;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class QuanLyKhoaHoc extends javax.swing.JFrame {

    public static ArrayList<KhoaHoc> list = new ArrayList<KhoaHoc>();
    ArrayList<KhoaHoc> listTim = new ArrayList<KhoaHoc>();
    int dem = -1;
    int vitri;
    String pathFile;
    String duongdananh = "C:\\Users\\DELL\\Desktop\\javabtl\\pngegg.png";
    int timeRun = 0;
    boolean xetNext = false;

    public QuanLyKhoaHoc() {
        initComponents();
        setLocationRelativeTo(null);
        setForeground(Color.red);
        setTitle("QUẢN LÝ BÁN KHÓA HỌC");
        thoiGian();
    }

    // curent time
    private void thoiGian() {
        new Thread() {
            public void run() {
                while (timeRun == 0) {
                    Calendar cal = new GregorianCalendar();
                    int second = cal.get(Calendar.SECOND);
                    int minute = cal.get(Calendar.MINUTE);
                    int hour = cal.get(Calendar.HOUR_OF_DAY);
                    int AM_PM = cal.get(Calendar.AM_PM);
                    String day_night = "";
                    if (AM_PM == 1) {
                        day_night = "PM";
                    } else {
                        day_night = "AM";
                    }
                    String str = hour + ":" + minute + ":" + second + " " + day_night;
                    Time.setText(str);
                }
            }
        }.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaKH = new java.awt.TextField();
        txtTen = new java.awt.TextField();
        txtKey = new java.awt.TextField();
        txtMail = new java.awt.TextField();
        txtGia = new java.awt.TextField();
        lblanh = new javax.swing.JLabel();
        btnChonHinh = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        btnNhapMoi = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        btnLuuFile = new javax.swing.JButton();
        btnDocFile = new javax.swing.JButton();
        btnHienThi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKhoaHoc = new javax.swing.JTable();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnSapXepTheoID = new javax.swing.JButton();
        btnSapXepTheoTen = new javax.swing.JButton();
        btnSapXepTheoKey = new javax.swing.JButton();
        btnSapXepTheoEmail = new javax.swing.JButton();
        btnSapXepTheoGia = new javax.swing.JButton();
        Time = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlabelTable = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Nhập ID khóa học");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Nhập tên khóa học");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Key kích hoạt khóa học");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Email người nhận");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Giá khóa học");

        txtMaKH.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtMaKH.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtMaKH.setName(""); // NOI18N
        txtMaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaKHActionPerformed(evt);
            }
        });

        txtTen.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtTen.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtKey.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtMail.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtGia.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        lblanh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblanh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlykhoahoc_n12/login/pngegg.png"))); // NOI18N
        lblanh.setText("            AVATAR");

        btnChonHinh.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnChonHinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnChonHinh.setText("Tải ảnh lên");
        btnChonHinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonHinhActionPerformed(evt);
            }
        });

        btnThem.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnThem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                btnThemAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnSua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setToolTipText("");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnTim.setBackground(new java.awt.Color(0, 102, 102));
        btnTim.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTim.setForeground(new java.awt.Color(255, 255, 255));
        btnTim.setText("Tìm khóa học");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        btnNhapMoi.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnNhapMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNhapMoi.setText("Nhập Mới");
        btnNhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapMoiActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(204, 0, 0));
        btnThoat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThoat.setForeground(new java.awt.Color(255, 255, 255));
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnLuuFile.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnLuuFile.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLuuFile.setText("Lưu File");
        btnLuuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuFileActionPerformed(evt);
            }
        });

        btnDocFile.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnDocFile.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDocFile.setText("Đọc File");
        btnDocFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocFileActionPerformed(evt);
            }
        });

        btnHienThi.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        btnHienThi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnHienThi.setText("Reset");
        btnHienThi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiActionPerformed(evt);
            }
        });

        tableKhoaHoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableKhoaHoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID khóa học", "Tên khóa học", "Key kích hoạt", "Email người nhận", "Giá khóa học", "Hình sản phẩm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableKhoaHoc.setRowHeight(60);
        tableKhoaHoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKhoaHocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableKhoaHoc);

        btn2.setBackground(new java.awt.Color(102, 0, 255));
        btn2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn2.setForeground(new java.awt.Color(255, 255, 255));
        btn2.setText("<<");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(102, 0, 255));
        btn3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn3.setForeground(new java.awt.Color(255, 255, 255));
        btn3.setText(">>");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btnSapXepTheoID.setBackground(new java.awt.Color(0, 102, 102));
        btnSapXepTheoID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSapXepTheoID.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXepTheoID.setText("Sắp xếp theo ID");
        btnSapXepTheoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepTheoIDActionPerformed(evt);
            }
        });

        btnSapXepTheoTen.setBackground(new java.awt.Color(0, 102, 102));
        btnSapXepTheoTen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSapXepTheoTen.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXepTheoTen.setText("Sắp xếp theo tên");
        btnSapXepTheoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepTheoTenActionPerformed(evt);
            }
        });

        btnSapXepTheoKey.setBackground(new java.awt.Color(0, 102, 102));
        btnSapXepTheoKey.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSapXepTheoKey.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXepTheoKey.setText("Sắp xếp theo key");
        btnSapXepTheoKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepTheoKeyActionPerformed(evt);
            }
        });

        btnSapXepTheoEmail.setBackground(new java.awt.Color(0, 102, 102));
        btnSapXepTheoEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSapXepTheoEmail.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXepTheoEmail.setText("Sắp xếp theo email");
        btnSapXepTheoEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepTheoEmailActionPerformed(evt);
            }
        });

        btnSapXepTheoGia.setBackground(new java.awt.Color(0, 102, 102));
        btnSapXepTheoGia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSapXepTheoGia.setForeground(new java.awt.Color(255, 255, 255));
        btnSapXepTheoGia.setText("Sắp xếp theo giá");
        btnSapXepTheoGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepTheoGiaActionPerformed(evt);
            }
        });

        Time.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Time.setForeground(new java.awt.Color(255, 0, 0));
        Time.setText("Time");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("QUẢN LÝ BÁN KHÓA HỌC");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Ảnh sản phẩm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSapXepTheoID, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(28, 28, 28)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnLuuFile, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnDocFile, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnHienThi, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnNhapMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnChonHinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(73, 73, 73)
                                                .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(118, 118, 118)
                                                .addComponent(lblanh, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(166, 166, 166)
                                                .addComponent(jLabel7))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSapXepTheoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSapXepTheoKey, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSapXepTheoEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSapXepTheoGia, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(272, 272, 272)
                                .addComponent(btn2)
                                .addGap(26, 26, 26)
                                .addComponent(btn3)
                                .addGap(82, 82, 82)
                                .addComponent(jlabelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1437, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(326, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(287, 287, 287)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(Time))
                .addGap(16, 16, 16)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnThem)
                                    .addComponent(btnXoa))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnSua)
                                    .addComponent(btnHienThi))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnLuuFile)
                                    .addComponent(btnDocFile))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnNhapMoi)
                                    .addComponent(btnChonHinh)))
                            .addComponent(lblanh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThoat)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKey, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn2)
                    .addComponent(btn3)
                    .addComponent(jlabelTable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSapXepTheoGia)
                    .addComponent(btnSapXepTheoEmail)
                    .addComponent(btnSapXepTheoKey)
                    .addComponent(btnSapXepTheoID)
                    .addComponent(btnTim)
                    .addComponent(btnSapXepTheoTen))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaKHActionPerformed

    }//GEN-LAST:event_txtMaKHActionPerformed

    // Tải ảnh lên
    private void btnChonHinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonHinhActionPerformed

         duongdananh = ChonFile();
        lblanh.setIcon(SelectImage(duongdananh));
    }//GEN-LAST:event_btnChonHinhActionPerformed
 private String ChonFile() {
        String duongDan = "";
        JFileChooser c = new JFileChooser();
        int val = c.showOpenDialog(null);
        if (val == JFileChooser.APPROVE_OPTION) {
            String tenFile = c.getSelectedFile().getName();
            String tenODia = c.getCurrentDirectory().toString();
            duongDan = tenODia + "\\" + tenFile;
            JOptionPane.showMessageDialog(this, "Chọn File thành công");
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn File nào!!");
        }
        return duongDan;
    }
    
    private ImageIcon SelectImage(String path) {
        ImageIcon MyImage = new ImageIcon(path);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblanh.getWidth(), lblanh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    private void btnThemAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_btnThemAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemAncestorAdded

    
    // Các lỗi khi thêm khóa học
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            String loiSo = "(^-)*\\d+(.\\d+)*";
            String loiEmail = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"+ "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
            if (txtMaKH.getText().equals("") || txtTen.getText().equals("") || txtKey.getText().equals("") || txtMail.getText().equals("") || txtGia.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui Lòng Điền Đầy Đủ Thông Tin");
            } else if (txtTen.getText().matches(loiSo) == true) {
                JOptionPane.showMessageDialog(this, "Tên khóa học không được nhập số", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtTen.setBackground(Color.RED);
            } else if (txtKey.getText().matches(loiSo) == false) {
                JOptionPane.showMessageDialog(this, "Key không được nhập ký tự", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtKey.setBackground(Color.RED);
            } else if (txtMail.getText().matches(loiEmail) == false) {
                JOptionPane.showMessageDialog(this, "Email bạn nhập chưa hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtMail.setBackground(Color.RED);
            } else if (txtGia.getText().matches(loiSo) == false) {
                JOptionPane.showMessageDialog(this, "Giá khóa học chỉ được nhập số", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtGia.setBackground(Color.RED);
            } else if (kiemTraTrung(txtMaKH.getText()) == true) {
                JOptionPane.showMessageDialog(this, "Mã khóa học không được trùng", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtMaKH.setBackground(Color.RED);
            } else if (kiemTraKey(Integer.parseInt(txtKey.getText())) == true) {
                JOptionPane.showMessageDialog(this, "Key phải khác 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtKey.setBackground(Color.RED);
            } else if (kiemTraGia(Double.parseDouble(txtGia.getText())) == true) {
                JOptionPane.showMessageDialog(this, "Giá khóa học phải khác 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtGia.setBackground(Color.RED);
            } else {
                txtMaKH.setBackground(null);
                txtGia.setBackground(null);
                txtMail.setBackground(null);
                txtKey.setBackground(null);
                txtTen.setBackground(null);
                themKhoaHoc();
                filltable();

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi 1 : " + e, "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnThemActionPerformed
// thêm khóa học
    public void themKhoaHoc() {
        KhoaHoc nv = new KhoaHoc();
        nv.setMaKH(txtMaKH.getText().toString());
        nv.setTenKH(txtTen.getText().toString());
        nv.setKey(Integer.parseInt(txtKey.getText().toString()));
        nv.setEmail(txtMail.getText().toString());
        nv.setGia(Double.parseDouble(txtGia.getText().toString()));
        nv.setAnh(duongdananh);
        list.add(nv);
    }

    // Điền thông tin vào bảng
    public void filltable() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) tableKhoaHoc.getModel();
        defaultTableModel.setRowCount(0);
        for (KhoaHoc nv : list) {
             Locale locale=new Locale("vi","VN");
             NumberFormat numberFormat=NumberFormat.getCurrencyInstance(locale);
             Object[] row = new Object[]{nv.getMaKH(), nv.getTenKH(), nv.getKey(), nv.getEmail(), numberFormat.format(nv.getGia()), nv.getAnh()}; 
             defaultTableModel.addRow(row);
        }

    }
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed

        if (tableKhoaHoc.getSelectedRow() >= 0) {
            suaKhoaHoc();
            filltable();
        } else {
            JOptionPane.showMessageDialog(this, "chọn tên người cập nhật trên bảng");
        }
    }//GEN-LAST:event_btnSuaActionPerformed
    public void suaKhoaHoc() {
        int dongTable = tableKhoaHoc.getSelectedRow();
        KhoaHoc nv = list.get(dongTable);
        nv.setMaKH(txtMaKH.getText());
        nv.setTenKH(txtTen.getText());
        nv.setKey(Integer.parseInt(txtKey.getText()));
        nv.setEmail(txtMail.getText().toString());
        nv.setGia(Double.parseDouble(txtGia.getText().toString()));
        nv.setAnh(duongdananh);

    }

   

    public boolean kiemTraGia(Double gia) {
        boolean check = false;
        if (gia< 0) {
            check = true;
        }
        return check;
    }

    public boolean kiemTraKey(int key) {
        boolean check = false;
          if (key < 0) {
                check = true;
          }
        return check;
    }

    public boolean kiemTraTrung(String maKhoaHoc) {
        boolean check = false;
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getMaKH().equalsIgnoreCase(maKhoaHoc)) {
                check = true;
            }
        }
        return check;
    }
    
    // Xóa khóa học
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Bạn Chắc Muốn Xóa Chứ", "THÔNG BÁO", JOptionPane.YES_NO_OPTION);
        tableKhoaHoc.getSelectedRow();
        if (input == 0) {
            list.remove(tableKhoaHoc.getSelectedRow());
            DefaultTableModel defaultTableModel = (DefaultTableModel) tableKhoaHoc.getModel();
            defaultTableModel.setRowCount(0);
            for (KhoaHoc khoaHoc : list) {
                Object[] row = new Object[]{
                    khoaHoc.getMaKH(), khoaHoc.getTenKH(), khoaHoc.getKey(), khoaHoc.getEmail(), khoaHoc.getGia(), khoaHoc.getAnh()
                };
                defaultTableModel.addRow(row);
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed
    
    // chuc nang tim kiem
    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed

        DialogTim dailog = new DialogTim();
        dailog.setVisible(true);
        dailog.setOnSearchEvent(new DialogTim.OnSearchEvent() {
            @Override
            public void onSearch(String value) {
                listTim.clear();
                for (int i = 0; i < list.size(); i++) {
                    if (list.get(i).getMaKH().startsWith(value) == true || list.get(i).getTenKH().startsWith(value) == true || list.get(i).getEmail().startsWith(value) == true || String.valueOf(list.get(i).getKey()).startsWith(value) == true || String.valueOf(list.get(i).getGia()).startsWith(value) == true) {
                        KhoaHoc nv1 = new KhoaHoc();
                        nv1.setMaKH(list.get(i).getMaKH());
                        nv1.setTenKH(list.get(i).getTenKH());
                        nv1.setKey(list.get(i).getKey());
                        nv1.setEmail(list.get(i).getEmail());
                        nv1.setGia(list.get(i).getGia());
                        nv1.setAnh(duongdananh);
                        listTim.add(nv1);
                    }
                }
                filltableTim();
            }
        });
    }//GEN-LAST:event_btnTimActionPerformed
    // render ra dòng mình tìm trong chức năng tìm kiếm
    public void filltableTim() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) tableKhoaHoc.getModel();
        defaultTableModel.setRowCount(0);
         for (KhoaHoc nv : listTim) {
             Locale locale=new Locale("vi","VN");
             NumberFormat numberFormat=NumberFormat.getCurrencyInstance(locale);
             Object[] row = new Object[]{nv.getMaKH(), nv.getTenKH(), nv.getKey(), nv.getEmail(), numberFormat.format(nv.getGia()), nv.getAnh()}; 
             defaultTableModel.addRow(row);
        }
    }
    
    // reset các jtextfield để nhập mới
    private void btnNhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapMoiActionPerformed
        txtMaKH.setText("");
        txtTen.setText("");
        txtKey.setText("");
        txtMail.setText("");
        txtGia.setText("");
    }//GEN-LAST:event_btnNhapMoiActionPerformed

    // thoát chương trình
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        int diaLog = JOptionPane.YES_NO_OPTION;
        int diaLogResult = JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát chương trình?", "Warring", diaLog);
        if (diaLogResult == JOptionPane.YES_OPTION) {
            DangNhap dangNhap = new DangNhap();
            dangNhap.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnThoatActionPerformed

    // lưu file
    private void btnLuuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuFileActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("C:\\Users\\DELL\\Desktop\\javabtl\\testJavaBtl.txt");
            ObjectOutputStream ois = new ObjectOutputStream(fos);
            ois.writeObject(list);
            ois.close();
            JOptionPane.showMessageDialog(this, "Lưu File Thành Công");
            return;

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi : " + ex);
        }
    }//GEN-LAST:event_btnLuuFileActionPerformed

    // Doc file
    private void btnDocFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocFileActionPerformed
        try {
            FileInputStream fis = new FileInputStream("C:\\Users\\DELL\\Desktop\\javabtl\\testJavaBtl.txt");
            ObjectInputStream ois = new ObjectInputStream(fis);
            list = (ArrayList<KhoaHoc>) ois.readObject();
            for (KhoaHoc khoaHoc : list) {
                filltable();
                ois.close();
                fis.close();
            }
            JOptionPane.showMessageDialog(this, "Đọc File Thành Công");
            return;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi : " + ex);
        }
    }//GEN-LAST:event_btnDocFileActionPerformed

    private void btnHienThiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiActionPerformed

        hienthi();
        filltable();
    }//GEN-LAST:event_btnHienThiActionPerformed
    boolean search = false;
    private void tableKhoaHocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKhoaHocMouseClicked

        int viTri = tableKhoaHoc.getSelectedRow();
        lblanh.setIcon(ResizeImage(String.valueOf(tableKhoaHoc.getValueAt(viTri, 5))));
        if (!search) {
            HienThiKhoaHoc(list.get(viTri));
        } else {
            HienThiKhoaHoc(listTim.get(viTri));
        }
    }//GEN-LAST:event_tableKhoaHocMouseClicked
      public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lblanh.getWidth(), lblanh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    public void HienThiKhoaHoc(KhoaHoc nv) {
        txtMaKH.setText(nv.getMaKH());
        txtTen.setText(nv.getTenKH());
        int tuoi1 = nv.getKey();
        txtKey.setText(String.valueOf(tuoi1));
        txtMail.setText(nv.getEmail());
        double gia1 = (nv.getGia());
        txtGia.setText(String.valueOf(gia1));
        lblanh.setText(nv.getAnh());
    }

  
    public void hienthi() {
        try {

            DefaultTableModel defaultTableModel = (DefaultTableModel) tableKhoaHoc.getModel();
            defaultTableModel.setRowCount(0);
            for (KhoaHoc nv : list) {
                Object[] row = new Object[]{
                    nv.getMaKH(), nv.getTenKH(), nv.getGia(), nv.getKey(), nv.getEmail(), nv.getGia()
                };
                defaultTableModel.addRow(row);
            }
        } catch (Exception e) {
        }
    }
    // prev row
    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        try {
            dem = tableKhoaHoc.getSelectedRow();
            dem--;
            if (dem == list.size()) {
                dem = 0;
            }
            tableKhoaHoc.setRowSelectionInterval(dem, dem);
            tableKhoaHocMouseClicked(null);
            show(dem);
        } catch (Exception ex) {

        }
    }//GEN-LAST:event_btn2ActionPerformed
    // hiển thị các thông tin cột trên mỗi hàng
    public void show(int i) {
        txtMaKH.setText(String.valueOf(tableKhoaHoc.getValueAt(i, 0)));
        txtTen.setText(String.valueOf(tableKhoaHoc.getValueAt(i, 1)));
        int key = Integer.parseInt(tableKhoaHoc.getValueAt(i, 2).toString());
        txtKey.setText(String.valueOf(key));
        txtMail.setText(String.valueOf(tableKhoaHoc.getValueAt(i, 3)));
        double gia = Double.parseDouble(tableKhoaHoc.getValueAt(i, 4).toString());
        txtGia.setText(String.valueOf(gia));
        lblanh.setText(String.valueOf(tableKhoaHoc.getValueAt(i, 5)));
    }

    // next row
    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed

      try {
            dem = tableKhoaHoc.getSelectedRow();
            dem++;
          if (dem == list.size()) {
                dem = 0;
           }
            tableKhoaHoc.setRowSelectionInterval(dem, dem);
              tableKhoaHocMouseClicked(null);
          show(dem);
          
        } catch (Exception ex) {

        }
        

    }//GEN-LAST:event_btn3ActionPerformed
  
    private void btnSapXepTheoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepTheoIDActionPerformed
        // TODO add your handling code here:
        Comparator<KhoaHoc> sx = new Comparator<KhoaHoc>() {
            @Override
            public int compare(KhoaHoc o1, KhoaHoc o2) {
                return o1.getMaKH().compareTo(o2.getMaKH());
            }
        };
        Collections.sort(list, sx);
        filltable();
    }//GEN-LAST:event_btnSapXepTheoIDActionPerformed

    private void btnSapXepTheoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepTheoTenActionPerformed
        // TODO add your handling code here:
        Comparator<KhoaHoc> sx = new Comparator<KhoaHoc>() {
            @Override
            public int compare(KhoaHoc o1, KhoaHoc o2) {
                return o1.getTenKH().compareTo(o2.getTenKH());
            }
        };
        Collections.sort(list, sx);
        filltable();
    }//GEN-LAST:event_btnSapXepTheoTenActionPerformed

    private void btnSapXepTheoKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepTheoKeyActionPerformed
        // TODO add your handling code here:
        Comparator<KhoaHoc> sx = new Comparator<KhoaHoc>() {
            @Override
            public int compare(KhoaHoc o1, KhoaHoc o2) {

                double d1 = o1.getKey();
                double d2 = o2.getKey();
                return Double.compare(d1, d2);

            }
        };
        Collections.sort(list, sx);
        filltable();
    }//GEN-LAST:event_btnSapXepTheoKeyActionPerformed

    private void btnSapXepTheoEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepTheoEmailActionPerformed
        // TODO add your handling code here:
        Comparator<KhoaHoc> sx = new Comparator<KhoaHoc>() {
            @Override
            public int compare(KhoaHoc o1, KhoaHoc o2) {
                return o1.getEmail().compareTo(o2.getEmail());
            }
        };
        Collections.sort(list, sx);
        filltable();
    }//GEN-LAST:event_btnSapXepTheoEmailActionPerformed

    private void btnSapXepTheoGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepTheoGiaActionPerformed
        // TODO add your handling code here:
        Comparator<KhoaHoc> sx = new Comparator<KhoaHoc>() {
            @Override
            public int compare(KhoaHoc o1, KhoaHoc o2) {

                double d1 = o1.getGia();
                double d2 = o2.getGia();
                return Double.compare(d1, d2);

            }
        };
        Collections.sort(list, sx);
        filltable();
    }//GEN-LAST:event_btnSapXepTheoGiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyKhoaHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        if (DangNhap.xetDangNhap == true) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new QuanLyKhoaHoc().setVisible(true);
                }
            });
        } else {
            int input = JOptionPane.showConfirmDialog(null, "Bạn cần đăng nhập trước khi sử dụng hệ thống .\n Bạn có muốn đăng nhập hay không ?", "THÔNG BÁO", JOptionPane.YES_NO_OPTION);
            if (input == 0) {
                DangNhap dangNhap = new DangNhap();
                dangNhap.setVisible(true);
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Time;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btnChonHinh;
    private javax.swing.JButton btnDocFile;
    private javax.swing.JButton btnHienThi;
    private javax.swing.JButton btnLuuFile;
    private javax.swing.JButton btnNhapMoi;
    private javax.swing.JButton btnSapXepTheoEmail;
    private javax.swing.JButton btnSapXepTheoGia;
    private javax.swing.JButton btnSapXepTheoID;
    private javax.swing.JButton btnSapXepTheoKey;
    private javax.swing.JButton btnSapXepTheoTen;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jlabelTable;
    private javax.swing.JLabel lblanh;
    private javax.swing.JTable tableKhoaHoc;
    private java.awt.TextField txtGia;
    private java.awt.TextField txtKey;
    private java.awt.TextField txtMaKH;
    private java.awt.TextField txtMail;
    private java.awt.TextField txtTen;
    // End of variables declaration//GEN-END:variables
}
